// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// bacSimonSingle
NumericVector bacSimonSingle(NumericMatrix y, int n1, int r1, int n, int r, int bsize);
RcppExport SEXP _basim_bacSimonSingle(SEXP ySEXP, SEXP n1SEXP, SEXP r1SEXP, SEXP nSEXP, SEXP rSEXP, SEXP bsizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y(ySEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type r1(r1SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type r(rSEXP);
    Rcpp::traits::input_parameter< int >::type bsize(bsizeSEXP);
    rcpp_result_gen = Rcpp::wrap(bacSimonSingle(y, n1, r1, n, r, bsize));
    return rcpp_result_gen;
END_RCPP
}
// bacSimonSearchR
NumericVector bacSimonSearchR(NumericMatrix y0, NumericMatrix y1, int n1, int n, int bsize, double alpha, double beta);
RcppExport SEXP _basim_bacSimonSearchR(SEXP y0SEXP, SEXP y1SEXP, SEXP n1SEXP, SEXP nSEXP, SEXP bsizeSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type n1(n1SEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< int >::type bsize(bsizeSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(bacSimonSearchR(y0, y1, n1, n, bsize, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// bacSimonDesign
NumericMatrix bacSimonDesign(NumericMatrix y0, NumericMatrix y1, int nmax, int nmin, int bsize, double alpha, double beta);
RcppExport SEXP _basim_bacSimonDesign(SEXP y0SEXP, SEXP y1SEXP, SEXP nmaxSEXP, SEXP nminSEXP, SEXP bsizeSEXP, SEXP alphaSEXP, SEXP betaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericMatrix >::type y0(y0SEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type y1(y1SEXP);
    Rcpp::traits::input_parameter< int >::type nmax(nmaxSEXP);
    Rcpp::traits::input_parameter< int >::type nmin(nminSEXP);
    Rcpp::traits::input_parameter< int >::type bsize(bsizeSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    rcpp_result_gen = Rcpp::wrap(bacSimonDesign(y0, y1, nmax, nmin, bsize, alpha, beta));
    return rcpp_result_gen;
END_RCPP
}
// bacICC
double bacICC(NumericVector ys, NumericVector bsizes);
RcppExport SEXP _basim_bacICC(SEXP ysSEXP, SEXP bsizesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type ys(ysSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type bsizes(bsizesSEXP);
    rcpp_result_gen = Rcpp::wrap(bacICC(ys, bsizes));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_basim_bacSimonSingle", (DL_FUNC) &_basim_bacSimonSingle, 6},
    {"_basim_bacSimonSearchR", (DL_FUNC) &_basim_bacSimonSearchR, 7},
    {"_basim_bacSimonDesign", (DL_FUNC) &_basim_bacSimonDesign, 7},
    {"_basim_bacICC", (DL_FUNC) &_basim_bacICC, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_basim(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
